@import "./variables";

// -------------------------------------
//   Relative size calculator
// -------------------------------------

@function relative($target-size, $base-size: $component-base-font-size, $unit: 1em) {
    @return ($target-size / $base-size * $unit);
}

@function rem($target-size) {
    @return relative($target-size, $root-font-size, 1rem);
}

// -------------------------------------
//   Text overflow Ellipsis
// -------------------------------------

@mixin overflow-ellipsis($_width: null) {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;

    @if $_width {
        width: $_width;
    }
}

// -------------------------------------
//   Remove inline spacing
// -------------------------------------

@mixin remove-spacing($_children, $_font-size: $basic-text-font-size) {
    font-size: 0;

    #{$_children} {
        font-size: $_font-size;
    }
}

// -------------------------------------
//   inline Vertical
// -------------------------------------

@mixin inline-vertical($_children: "> *") {
    user-select: none;

    &:before {
        content: "";
        display: inline-block;
        width: 0;
        height: 100%;
        vertical-align: middle;
        pointer-events: none;
    }

    #{$_children} {
        display: inline-block;
        vertical-align: middle;
        user-select: auto;
    }
}

// -------------------------------------
//   Remove button default appearance
// -------------------------------------

@mixin remove-button-appearance {
    color: inherit;
    background: transparent;
    border: 0;
    margin: 0;
    padding: 0;
    outline: 0;
    text-align: inherit;
    appearance: none;
    user-select: none;
}

// -------------------------------------
//   z-index helper
// -------------------------------------

@function map-has-nested-keys($map, $keys...) {
    @each $key in $keys {
        @if not map-has-key($map, $key) {
            @return false;
        }
        $map: map-get($map, $key);
    }

    @return true;
}

@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }

    @return $map;
}

@function z($layers...) {
    @if not map-has-nested-keys($z-layers, $layers...) {
        @warn "No layer found for `#{inspect($layers...)}` in $z-layers map. Property omitted.";
    }

    @return map-deep-get($z-layers, $layers...);
}
